{
	// Place your snippets for shellscript here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
    "add a shebang": {
        "prefix": "#!",
        "body": "#!/bin/bash",
        "description": "Add shebang to script"
    },
	"echo": {
        "prefix": "echo",
        "body": "echo \"${0:message}\"",
        "description": "Echo a message."
    },
	"read": {
        "prefix": "read",
        "body": "read -r ${0:VAR}",
        "description": "Read input of ${VAR}."
    },
    "if": {
        "prefix": "if",
        "body": "if [[ ${0:condition} ]]; then\n\t${1}\nfi",
        "description": "An IF statement."
    },
    "elseif": {
        "prefix": "elseif",
        "body": "elif [[ ${0:condition} ]]; then\n\t${1}",
        "description": "Add an elseif to an if statement."
    },
    "else": {
        "prefix": "else",
        "body": "else\n\t${0:command}",
        "description": "else"
    },
    "for_in": {
        "prefix": "for_in",
        "body": "for ${0:VAR} in $${1:LIST}\ndo\n\techo \"$${0:VAR}\"\ndone\n",
        "description": "for loop in list"
    },
    "for_i": {
        "prefix": "for_i",
        "body": "for ((${0:i} = 0; ${0:i} < ${1:10}; ${0:i}++)); do\n\techo \"$${0:i}\"\ndone\n",
        "description": "An index-based iteration for loop."
    },
    "while": {
        "prefix": "while",
        "body": "while [[ ${1:condition} ]]; do\n\t${0}\ndone\n",
        "description": "A while loop by condition."
    },
    "until": {
        "prefix": "until",
        "body": "until [[ ${1:condition} ]]; do\n\t${0}\ndone\n",
        "description": "until loop by condition"
    },
    "function": {
        "prefix": "function",
        "body": "${1:name} ()\n{\n\t${0}\n}",
        "description": [
            "This defines a function named name.\n",
            "The reserved word function is optional.\n",
            "If the function reserved word is supplied, the parentheses are optional.\n",
            "1. Recommended way:\n",
            "name() {}\n",
            "2. C-like-way:\nfunction name [()] {}"
        ]
    },
    "case": {
        "prefix": "case",
        "body": "case \"$${0:VAR}\" in\n\t${1:1}) echo 1\n\t;;\n\t${2:2|3}) echo 2 or 3\n\t;;\n\t*) echo default\n\t;;\nesac\n",
        "description": [
            "case word in [ [(] pattern [ | pattern ] ... ) list ;; ] ... esac\n",
            "A case command first expands word, and tries to match it against each pattern in turn."
        ]
    },
    "break": {
        "prefix": "break",
        "body": "break ${0}",
        "description": [
            "The break command tells Bash to leave the loop straight away.\n",
            "Enter the break or break (n) where n=number of loops."
        ]
    },
    "expr": {
        "prefix": "expr",
        "body": "expr ${0:1 + 1}",
        "description": "Calculate numbers with Bash."
    },
    "black": {
        "prefix": "black",
        "body": "\033[30m",
        "description": "Black colour code."
    },
    "red": {
        "prefix": "red",
        "body": "\033[31m",
        "description": "Red colour code."
    },
    "green": {
        "prefix": "green",
        "body": "\033[32m",
        "description": "Green colour code."
    },
    "brown": {
        "prefix": "brown",
        "body": "\033[33m",
        "description": "Brown colour code."
    },
    "blue": {
        "prefix": "blue",
        "body": "\033[34m",
        "description": "Blue colour code."
    },
    "purple": {
        "prefix": "purple",
        "body": "\033[35m",
        "description": "Purple colour code."
    },
    "cyan": {
        "prefix": "cyan",
        "body": "\033[36m",
        "description": "Cyan colour code."
    },
    "grey": {
        "prefix": "grey",
        "body": "\033[37m",
        "description": "Grey colour code."
    }
	 

}